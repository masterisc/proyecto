/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HGR46;

import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author KATORCE-JUEN
 */
public class AgregarImpresoras extends javax.swing.JFrame {

    /**
     * Creates new form AgregarImpresoras
     */
    public AgregarImpresoras() {
        initComponents();
        txtBusqueda.setEditable(false);
        btnBuscar.setEnabled(false);
        btnEliminar.setEnabled(false);
        setResizable(false);
        setLocationRelativeTo(null);
        setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\master EMM\\Documents\\NetBeansProjects\\Empresa\\IMSS.jpg"));
        setTitle("SISTEMA DE CONTROL DE INVENTARIO");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ComOpciones = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnInsertar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();
        txtSerie = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtConexion = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 450));
        setSize(new java.awt.Dimension(610, 350));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ComOpciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "selecciona una opcion....", "Serie", "Conexion" }));
        ComOpciones.setMinimumSize(new java.awt.Dimension(145, 40));
        ComOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComOpcionesActionPerformed(evt);
            }
        });
        getContentPane().add(ComOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 159, -1));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 90, -1));

        jLabel1.setText("Serie:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 145, 58, -1));

        jLabel2.setText("Marca:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 188, -1, -1));

        jLabel3.setText("Modelo:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 225, -1, -1));

        jLabel4.setText("Conexion:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 266, -1, -1));

        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        getContentPane().add(btnInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 141, 87, -1));

        btnModificar.setText("Guardar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 184, 87, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 222, 87, -1));

        btnCancelar.setText("Cancelar");
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 262, 87, -1));

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 342, 64, 34));
        getContentPane().add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 118, -1));

        txtSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerieActionPerformed(evt);
            }
        });
        getContentPane().add(txtSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 142, 125, -1));

        txtModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModeloActionPerformed(evt);
            }
        });
        getContentPane().add(txtModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 222, 124, -1));
        getContentPane().add(txtMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 185, 124, -1));
        getContentPane().add(txtConexion, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 263, 124, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        btnInsertar.setEnabled(false);
        btnEliminar.setEnabled(true);
        btnBuscar.setEnabled(false);
        txtBusqueda.setEditable(false);
        txtBusqueda.setEditable(false);
        txtSerie.setEditable(false);
        
        if(txtBusqueda.getText().length() > 0){
        
        Conexion conex = null;
        Statement stm = null;
        ResultSet rs = null;
         
            conex= new Conexion();
            
            if(ComOpciones.getSelectedItem() == "Serie")
            {
                
                
            try {
                stm = conex.getConnection().createStatement();
                rs = stm.executeQuery("select *from impresora where serie_impresora = '"+txtBusqueda.getText()+"'");   
                    if(rs.next()){
                    txtSerie.setText(rs.getString("serie_impresora"));
                    txtMarca.setText(rs.getString("marca"));
                    txtModelo.setText(rs.getString("modelo"));
                    txtConexion.setText(rs.getString("conexion"));
                }
                
                txtBusqueda.setText("");
                txtBusqueda.setEditable(false);
                btnBuscar.setEnabled(false);
                
            } catch (SQLException ex) {
                Logger.getLogger(AgregarImpresoras.class.getName()).log(Level.SEVERE, null, ex);
            }
                  
            }else if(ComOpciones.getSelectedItem() == "Conexion")
            {
            try {
                stm = conex.getConnection().createStatement();
                rs = stm.executeQuery("select *from impresora where conexion = '"+txtBusqueda.getText()+"'");
                if(rs.next()){
                    txtBusqueda.setText(rs.getString("serie_impresora"));
                    txtSerie.setText(rs.getString("marca"));
                    txtModelo.setText(rs.getString("modelo"));
                    txtConexion.setText(rs.getString("conexion"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(AgregarImpresoras.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
        
        }else showMessageDialog(null,"campo vacio o no existe registro en base de datos!!!");
        txtBusqueda.setText("");
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void ComOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComOpcionesActionPerformed
        if(ComOpciones.getSelectedIndex() == 0){
            btnBuscar.setEnabled(false);
            txtBusqueda.setEditable(false);
            btnInsertar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnCancelar.setEnabled(false);
        }else if(ComOpciones.getSelectedIndex() == 1){
            btnBuscar.setEnabled(true);
            txtBusqueda.setEditable(true);     
            btnInsertar.setEnabled(false);
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnCancelar.setEnabled(true);
        }else if(ComOpciones.getSelectedIndex() == 2){
            btnBuscar.setEnabled(true);
            txtBusqueda.setEditable(true);
            btnInsertar.setEnabled(false);
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnCancelar.setEnabled(true);
        }
    }//GEN-LAST:event_ComOpcionesActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(camposllenos()==true){
           
            Conexion conex = null;
            Statement stm = null;
            ResultSet rs = null;
            
            conex= new Conexion();
            
            try {
                stm = conex.getConnection().createStatement();
                stm.executeUpdate("UPDATE impresora SET marca ='"+txtMarca.getText()+"', modelo='"+txtModelo.getText()+"', "
                        +"conexion='"+txtConexion.getText()+"' where impresora.serie_impresora='"+txtSerie.getText()+"'" );
                
                txtSerie.setText("");
                txtMarca.setText("");
                txtModelo.setText("");
                txtConexion.setText("");
                
                btnInsertar.setEnabled(true);
                txtSerie.setEditable(true);
                
                showMessageDialog(null,"impresora modificada correctamente");
                
            } catch (SQLException ex) {
                Logger.getLogger(AgregarImpresoras.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                stm.close();
            } catch (SQLException ex) {
                Logger.getLogger(AgregarImpresoras.class.getName()).log(Level.SEVERE, null, ex);
            }
            conex.desconectar();

            
        }else   showMessageDialog(null,"campos vacios!!!");
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private boolean camposllenos(){
        if(txtSerie.getText().length() > 0 && txtMarca.getText().length() > 0 && txtModelo.getText().length() > 0 && txtConexion.getText().length() > 0)
        return true;
        else return false;
    }
    
    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        
        if(camposllenos()==true){
            
            Conexion conex = null;
            Statement stm = null;
            ResultSet rs = null;

            conex= new Conexion();

            try {
                stm = conex.getConnection().createStatement();

                stm.executeUpdate("INSERT INTO impresora (serie_impresora, marca, modelo, conexion)"
                    + "VALUES ('" +txtSerie.getText()+  "','" +txtMarca.getText()+  "','" +txtModelo.getText()+  "','" +txtConexion.getText()+  "')");
                
                txtSerie.setText("");
                txtMarca.setText("");
                txtModelo.setText("");
                txtConexion.setText("");
                
                btnEliminar.setEnabled(false);
                txtBusqueda.setEditable(false);
                btnBuscar.setEnabled(false);
                showMessageDialog(null,"impresora fue añadida correctamente");
                
            } catch (SQLException ex) {
                Logger.getLogger(AgregarEquipo.class.getName()).log(Level.SEVERE, null, ex);
            }
            

            try {
                stm.close();
            } catch (SQLException ex) {
                Logger.getLogger(AgregarEquipo.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(AgregarEquipo.class.getName()).log(Level.SEVERE, null, ex);
            }
            conex.desconectar();

            
/*
            Principal principal = new Principal();
            principal.actualizaequipo();
*/
        }else   showMessageDialog(null,"campos vacios!!!");
        
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void txtModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModeloActionPerformed

    private void txtSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerieActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        if(camposllenos()==true){
            Conexion conex = null;
            Statement stm = null;
            ResultSet rs = null;

            conex= new Conexion();

            try {
                stm = conex.getConnection().createStatement();

                stm.executeUpdate("DELETE FROM impresora WHERE impresora.serie_impresora = '" +txtSerie.getText()+ "'");
                
                showMessageDialog(null,"equipo eliminado correctamente");
                
                txtSerie.setText("");
                txtMarca.setText("");
                txtModelo.setText("");
                txtConexion.setText("");
                btnInsertar.setEnabled(true);
                txtSerie.setEditable(true);
                
            } catch (SQLException ex) {
                Logger.getLogger(AgregarImpresoras.class.getName()).log(Level.SEVERE, null, ex);
            }
            

            try {
                stm.close();
            } catch (SQLException ex) {
                Logger.getLogger(AgregarImpresoras.class.getName()).log(Level.SEVERE, null, ex);
            }
            conex.desconectar();
        }else   showMessageDialog(null,"campos vacios!!!");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarImpresoras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarImpresoras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarImpresoras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarImpresoras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarImpresoras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComOpciones;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtConexion;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtSerie;
    // End of variables declaration//GEN-END:variables
}
